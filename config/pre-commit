#!/bin/sh

PROJECT=$(php -r "echo dirname(dirname(dirname(realpath('$0'))));")
--ignore=src/WebHooks/*
echo "Checking files using PHP CS Fixer..."
# get the list of changed files
staged_files=$(git diff --cached --name-only)

# build command to fix files
for staged in ${staged_files}; do
  # work only with existing files
  if [[ -f ${staged} && ${staged} == *.php ]]; then
    # use php-cs-fixer and get flag of correction
    vendor/bin/php-cs-fixer fix $staged -q
    correction_code=$?

    # HERE, if returns 0, add stage it again
    if [[ ${correction_code} -eq 0 ]]; then
      git add "$staged"
    fi
  fi
done

STAGED_FILES_CMD=$(git diff --cached --name-only --diff-filter=ACMR HEAD | grep \\.php)

# Determine if a file list is passed
if [ "$#" -eq 1 ]; then
  oIFS=$IFS
  IFS='
	'
  SFILES="$1"
  IFS=$oIFS
fi
SFILES=${SFILES:-$STAGED_FILES_CMD}

echo "Checking files using PHP Lint..."
for FILE in $SFILES; do
  php -l -d display_errors=0 $PROJECT/$FILE 1> /dev/null
  if [ $? != 0 ]; then
    echo "Fix the error before commit."
    exit 1
  fi
  FILES="$FILES $PROJECT/$FILE"
done

if [ "$FILES" != "" ]; then
  echo "Running Code Sniffer..."
  vendor/squizlabs/php_codesniffer/bin/phpcs --standard=PSR1,PSR2 --ignore=tests/ $FILES
  if [ $? != 0 ]; then
    echo "Fix the error before commit."
    exit 1
  fi
fi

exit $?
